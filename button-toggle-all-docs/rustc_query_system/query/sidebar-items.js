window.SIDEBAR_ITEMS = {"enum":[["QueryMode",""]],"fn":[["force_query",""],["get_query",""],["print_query_stack",""],["try_get_cached","Checks if the query is already computed and in the cache. It returns the shard index and a lock guard to the shard, which will be used if the query is not in the cache and we need to compute it."]],"mod":[["caches",""],["config","Query configuration and description traits."],["job",""],["plumbing","The implementation of the query system itself. This defines the macros that generate the actual methods on tcx which find and execute the provider, manage the caches, and so forth."]],"struct":[["ArenaCacheSelector",""],["DefaultCacheSelector",""],["QueryInfo","Represents a span and a query key."],["QueryJob","Represents an active query job."],["QueryJobId","A value uniquely identifying an active query job."],["QueryJobInfo",""],["QuerySideEffects","Tracks ‘side effects’ for a particular query. This struct is saved to disk along with the query result, and loaded from disk if we mark the query as green. This allows us to ‘replay’ changes to global state that would otherwise only occur if we actually executed the query method."],["QueryStackFrame","Description of a frame in the query stack."],["QueryState",""],["QueryVTable",""]],"trait":[["CacheSelector",""],["QueryCache",""],["QueryConfig",""],["QueryContext",""],["QueryDescription",""],["QueryStorage",""]],"type":[["QueryMap",""]]};