window.SIDEBAR_ITEMS = {"enum":[["AddSemicolon",""],["AstFragment","A fragment of AST that can be produced by a single macro expansion. Can also serve as an input and intermediate result for macro expansion operations."],["AstFragmentKind","“Discriminant” of an AST fragment."],["InvocationKind",""],["SupportsMacroExpansion",""]],"fn":[["ensure_complete_parse",""],["parse_ast_fragment",""]],"macro":[["assign_id","Wraps a call to `noop_visit_*` / `noop_flat_map_*` for an AST node that supports attributes (see the `Annotatable` enum) This method assigns a `NodeId`, and sets that `NodeId` as our current ‘lint node id’. If a macro call is found inside this AST node, we will use this AST node’s `NodeId` to emit lints associated with that macro (allowing `#[allow]` / `#[deny]` to be applied close to the macro invocation)."],["ast_fragments",""]],"struct":[["ExpansionConfig",""],["ImplItemTag",""],["Invocation",""],["InvocationCollector",""],["MacroExpander",""],["OptExprTag",""],["TraitItemTag",""]],"trait":[["InvocationCollectorNode","A trait implemented for all `AstFragment` nodes and providing all pieces of functionality used by `InvocationCollector`."]]};