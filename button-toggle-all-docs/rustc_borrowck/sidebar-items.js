window.SIDEBAR_ITEMS = {"enum":[["AccessDepth",""],["ArtificialField",""],["InitializationRequiringAction",""],["LocalMutationIsAllowed","When checking permissions for a place access, this flag is used to indicate that an immutable local place can be mutated."],["Overlap","The degree of overlap between 2 places for borrow-checking."],["ReadKind","Kind of read access to a value (For informational purposes only)"],["ReadOrWrite","Kind of access to a value: read or write (For informational purposes only)"],["WriteKind","Kind of write access to a value (For informational purposes only)"]],"fn":[["do_mir_borrowck","Perform the actual borrow checking."],["mir_borrowck",""],["provide",""]],"mod":[["borrow_set",""],["borrowck_errors",""],["constraint_generation",""],["constraints",""],["consumers","This file provides API for compiler consumers."],["dataflow",""],["def_use",""],["diagnostics","Borrow checker diagnostics."],["error",""],["facts",""],["invalidation",""],["location",""],["member_constraints",""],["nll","The entry point of the NLL borrow checker."],["path_utils",""],["place_ext",""],["places_conflict",""],["prefixes","From the NLL RFC: “The deep [aka ‘supporting’] prefixes for an place are formed by stripping away fields and derefs, except that we stop when we reach the deref of a shared reference. […] “"],["region_infer",""],["renumber",""],["session_diagnostics",""],["type_check","This pass type-checks the MIR to ensure it is not broken."],["universal_regions","Code to extract the universally quantified regions declared on a function and the relationships between them. For example:"],["used_muts",""]],"struct":[["BodyWithBorrowckFacts","A `Body` with information computed by the borrow checker. This struct is intended to be consumed by compiler consumers."],["MirBorrowckCtxt",""],["RootPlace",""],["TyCtxtConsts","Associate some local constants with the `'tcx` lifetime"],["Upvar",""]]};