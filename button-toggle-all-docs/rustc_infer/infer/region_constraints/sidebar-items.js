window.SIDEBAR_ITEMS = {"enum":[["CombineMapType",""],["Constraint","Represents a constraint that influences the inference process."],["GenericKind",""],["UndoLog",""],["VerifyBound","Describes the things that some `GenericKind` value `G` is known to outlive. Each variant of `VerifyBound` can be thought of as a function:"]],"mod":[["leak_check",""]],"struct":[["MemberConstraint","Requires that `region` must be equal to one of the regions in `choice_regions`. We often denote this using the syntax:"],["RegionConstraintCollector",""],["RegionConstraintData","The full set of region constraints gathered up by the collector. Describes constraints between the region variables and other regions, as well as other conditions that must be verified, or assumptions that can be made."],["RegionConstraintStorage",""],["RegionSnapshot",""],["RegionVariableInfo",""],["TwoRegions",""],["Verify",""],["VerifyIfEq","This is a “conditional bound” that checks the result of inference and supplies a bound if it ended up being relevant. It’s used in situations like this:"]],"type":[["CombineMap",""],["VarInfos",""]]};