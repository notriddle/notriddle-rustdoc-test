window.SIDEBAR_ITEMS = {"fn":[["clean_args_from_types_and_body_id",""],["clean_args_from_types_and_names",""],["clean_bare_fn_ty",""],["clean_const",""],["clean_doc_module",""],["clean_extern_crate",""],["clean_field",""],["clean_field_with_def_id",""],["clean_fn_decl_from_did_and_sig",""],["clean_fn_decl_legacy_const_generics","This is needed to make it more “readable” when documenting functions using `rustc_legacy_const_generics`. More information in https://github.com/rust-lang/rust/issues/83167."],["clean_fn_decl_with_args",""],["clean_fn_or_proc_macro",""],["clean_function",""],["clean_generic_args",""],["clean_generic_bound",""],["clean_generic_param",""],["clean_generic_param_def",""],["clean_generics",""],["clean_hir_term",""],["clean_impl",""],["clean_impl_item",""],["clean_lifetime",""],["clean_maybe_renamed_foreign_item",""],["clean_maybe_renamed_item",""],["clean_middle_assoc_item",""],["clean_middle_const",""],["clean_middle_field",""],["clean_middle_region",""],["clean_middle_term",""],["clean_middle_ty",""],["clean_path",""],["clean_path_segment",""],["clean_poly_trait_predicate",""],["clean_poly_trait_ref",""],["clean_poly_trait_ref_with_bindings",""],["clean_predicate",""],["clean_projection",""],["clean_projection_predicate",""],["clean_qpath",""],["clean_region_outlives_predicate",""],["clean_trait_item",""],["clean_trait_ref",""],["clean_trait_ref_with_bindings",""],["clean_ty",""],["clean_ty_generics",""],["clean_type_binding",""],["clean_type_outlives_predicate",""],["clean_use_statement",""],["clean_variant",""],["clean_variant_data",""],["clean_variant_def",""],["clean_visibility",""],["clean_where_predicate",""],["compute_should_show_cast",""],["is_elided_lifetime","This can happen for `async fn`, e.g. `async fn f<'_>(&'_ self)`."],["is_field_vis_inherited",""],["is_impl_trait","Synthetic type-parameters are inserted after normal ones. In order for normal parameters to be able to refer to synthetic ones, scans them first."],["maybe_expand_private_type_alias",""],["normalize","Returns `None` if the type could not be normalized"],["projection_to_path_segment",""]],"mod":[["auto_trait",""],["blanket_impl",""],["cfg","The representation of a `#[doc(cfg(...))]` attribute."],["inline","Support for inlining external documentation into the current AST."],["render_macro_matchers",""],["simplify","Simplification of where-clauses and parameter bounds into a prettier and more canonical form."],["types",""],["utils",""]]};