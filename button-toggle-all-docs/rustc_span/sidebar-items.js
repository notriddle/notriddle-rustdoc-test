window.SIDEBAR_ITEMS = {"constant":[["DUMMY_SP","Dummy span, both position and length are zero, syntax context is zero as well."]],"enum":[["DebuggerVisualizerType",""],["ExternalSource",""],["ExternalSourceKind","The state of the lazy external source loading mechanism of a `SourceFile`."],["FileName","Differentiates between real files and common virtual files."],["FileNameDisplayPreference",""],["NonNarrowChar","Identifies an offset of a non-narrow character in a `SourceFile`."],["RealFileName",""],["SourceFileHashAlgorithm",""],["SourceFileLines",""],["SpanLinesError",""],["SpanSnippetError",""]],"fn":[["create_default_session_globals_then",""],["create_default_session_if_not_set_then",""],["create_session_globals_then",""],["create_session_if_not_set_then",""],["normalize_newlines","Replaces `\\r\\n` with `\\n` in-place in `src`."],["normalize_src","Normalizes the source code and records the normalizations."],["remove_bom","Removes UTF-8 BOM, if any."],["set_session_globals_then",""],["with_session_globals",""],["with_source_map","Calls the provided closure, using the provided `SourceMap` to format any spans that are debug-printed during the closure’s execution."]],"macro":[["impl_pos",""]],"mod":[["analyze_source_file",""],["caching_source_map_view",""],["def_id",""],["edition",""],["fatal_error",""],["hygiene","Machinery for hygienic macros."],["lev_distance","Levenshtein distances."],["profiling",""],["source_map","Types for tracking pieces of source code within a crate."],["span_encoding",""],["symbol","An “interner” is a data structure that associates values with usize tags and allows bidirectional lookup; i.e., given a value, one can easily find the type, and vice versa."]],"static":[["SESSION_GLOBALS",""],["SPAN_TRACK",""]],"struct":[["BytePos","A byte offset."],["CachingSourceMapView",""],["CharPos","A character offset."],["DebuggerVisualizerFile","A single debugger visualizer file."],["DistinctSources",""],["FileLines",""],["FileNameDisplay",""],["InnerSpan","Range inside of a `Span` used for diagnostics when we only have access to relative positions."],["LineInfo",""],["Loc","A source code location used for error reporting."],["MalformedSourceMapPositions",""],["MultiByteChar","Identifies an offset of a multi-byte character in a `SourceFile`."],["NormalizedPos","Identifies an offset of a character that was normalized away from `SourceFile`."],["OffsetOverflowError",""],["SessionGlobals",""],["SourceFile","A single source in the [`SourceMap`]."],["SourceFileAndBytePos",""],["SourceFileAndLine",""],["SourceFileDiffs","The source file lines in difference list form. This matches the form used within metadata, which saves space by exploiting the fact that the lines list is sorted and individual lines are usually not that long."],["SourceFileHash","The hash of the on-disk source file used for debug info."],["Span","A compressed span."],["SpanData","Represents a span."]],"trait":[["HashStableContext","Requirements for a `StableHashingContext` to be used in this crate."],["Pos",""]],"type":[["FileLinesResult",""]]};