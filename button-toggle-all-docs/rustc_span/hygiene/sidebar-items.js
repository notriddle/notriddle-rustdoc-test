window.SIDEBAR_ITEMS = {"enum":[["AstPass","The kind of AST transform."],["DesugaringKind","The kind of compiler desugaring."],["ExpnKind","Expansion kind."],["MacroKind","The kind of macro invocation or definition."],["Transparency","A property of a macro expansion that determines how identifiers produced by that expansion are resolved."]],"fn":[["assert_default_hashing_controls","Assert that the provided `HashStableContext` is configured with the ‘default’ `HashingControls`. We should always have bailed out before getting to here with a non-default mode. With this check in place, we can avoid the need to maintain separate versions of `ExpnData` hashes for each permutation of `HashingControls` settings."],["clear_syntax_context_map",""],["debug_hygiene_data",""],["decode_expn_id","Decode an expansion from the metadata of a foreign crate."],["decode_syntax_context",""],["for_all_ctxts_in",""],["for_all_expns_in",""],["raw_encode_syntax_context",""],["register_expn_id","Register an expansion which has been decoded from the metadata of a foreign crate."],["register_local_expn_id","Register an expansion which has been decoded from the on-disk-cache for the local crate."],["update_disambiguator","Updates the `disambiguator` field of the corresponding `ExpnData` such that the `Fingerprint` of the `ExpnData` does not collide with any other `ExpnIds`."],["update_dollar_crate_names",""],["walk_chain",""]],"struct":[["ExpnData","A subset of properties from both macro definition and macro call available through global data. Avoid using this if you have access to the original definition or call structures."],["ExpnHash","A unique hash value associated to an expansion."],["ExpnId","A unique ID associated with a macro invocation and expansion."],["ExpnIndex","A unique ID associated with a macro invocation and expansion."],["HygieneData",""],["HygieneDecodeContext","Additional information used to assist in decoding hygiene data"],["HygieneEncodeContext",""],["LocalExpnId","A unique ID associated with a macro invocation and expansion."],["SyntaxContext","A `SyntaxContext` represents a chain of pairs `(ExpnId, Transparency)` named “marks”."],["SyntaxContextData",""]]};