(function() {var implementors = {
"rustc_infer":[["impl&lt;'tcx&gt; <a class=\"trait\" href=\"rustc_middle/ty/fold/trait.TypeFoldable.html\" title=\"trait rustc_middle::ty::fold::TypeFoldable\">TypeFoldable</a>&lt;'tcx&gt; for <a class=\"enum\" href=\"rustc_infer/infer/region_constraints/enum.GenericKind.html\" title=\"enum rustc_infer::infer::region_constraints::GenericKind\">GenericKind</a>&lt;'tcx&gt;"],["impl&lt;'tcx&gt; <a class=\"trait\" href=\"rustc_middle/ty/fold/trait.TypeFoldable.html\" title=\"trait rustc_middle::ty::fold::TypeFoldable\">TypeFoldable</a>&lt;'tcx&gt; for <a class=\"enum\" href=\"rustc_infer/infer/region_constraints/enum.VerifyBound.html\" title=\"enum rustc_infer::infer::region_constraints::VerifyBound\">VerifyBound</a>&lt;'tcx&gt;"],["impl&lt;'tcx&gt; <a class=\"trait\" href=\"rustc_middle/ty/fold/trait.TypeFoldable.html\" title=\"trait rustc_middle::ty::fold::TypeFoldable\">TypeFoldable</a>&lt;'tcx&gt; for <a class=\"struct\" href=\"rustc_infer/infer/region_constraints/struct.VerifyIfEq.html\" title=\"struct rustc_infer::infer::region_constraints::VerifyIfEq\">VerifyIfEq</a>&lt;'tcx&gt;"],["impl&lt;'tcx&gt; <a class=\"trait\" href=\"rustc_middle/ty/fold/trait.TypeFoldable.html\" title=\"trait rustc_middle::ty::fold::TypeFoldable\">TypeFoldable</a>&lt;'tcx&gt; for <a class=\"enum\" href=\"rustc_infer/infer/enum.ValuePairs.html\" title=\"enum rustc_infer::infer::ValuePairs\">ValuePairs</a>&lt;'tcx&gt;"],["impl&lt;'tcx, T&gt; <a class=\"trait\" href=\"rustc_middle/ty/fold/trait.TypeFoldable.html\" title=\"trait rustc_middle::ty::fold::TypeFoldable\">TypeFoldable</a>&lt;'tcx&gt; for <a class=\"struct\" href=\"rustc_infer/traits/project/struct.Normalized.html\" title=\"struct rustc_infer::traits::project::Normalized\">Normalized</a>&lt;'tcx, T&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"rustc_middle/ty/fold/trait.TypeFoldable.html\" title=\"trait rustc_middle::ty::fold::TypeFoldable\">TypeFoldable</a>&lt;'tcx&gt;,</span>"],["impl&lt;'tcx, O:&nbsp;<a class=\"trait\" href=\"rustc_middle/ty/fold/trait.TypeFoldable.html\" title=\"trait rustc_middle::ty::fold::TypeFoldable\">TypeFoldable</a>&lt;'tcx&gt;&gt; <a class=\"trait\" href=\"rustc_middle/ty/fold/trait.TypeFoldable.html\" title=\"trait rustc_middle::ty::fold::TypeFoldable\">TypeFoldable</a>&lt;'tcx&gt; for <a class=\"struct\" href=\"rustc_infer/traits/struct.Obligation.html\" title=\"struct rustc_infer::traits::Obligation\">Obligation</a>&lt;'tcx, O&gt;"]],
"rustc_middle":[],
"rustc_trait_selection":[["impl&lt;'tcx&gt; <a class=\"trait\" href=\"rustc_middle/ty/fold/trait.TypeFoldable.html\" title=\"trait rustc_middle::ty::fold::TypeFoldable\">TypeFoldable</a>&lt;'tcx&gt; for <a class=\"struct\" href=\"rustc_trait_selection/traits/query/type_op/implied_outlives_bounds/struct.ImpliedOutlivesBounds.html\" title=\"struct rustc_trait_selection::traits::query::type_op::implied_outlives_bounds::ImpliedOutlivesBounds\">ImpliedOutlivesBounds</a>&lt;'tcx&gt;"],["impl&lt;'tcx&gt; <a class=\"trait\" href=\"rustc_middle/ty/fold/trait.TypeFoldable.html\" title=\"trait rustc_middle::ty::fold::TypeFoldable\">TypeFoldable</a>&lt;'tcx&gt; for <a class=\"struct\" href=\"rustc_trait_selection/traits/query/type_op/outlives/struct.DropckOutlives.html\" title=\"struct rustc_trait_selection::traits::query::type_op::outlives::DropckOutlives\">DropckOutlives</a>&lt;'tcx&gt;"]],
"rustc_transmute":[["impl&lt;'tcx&gt; <a class=\"trait\" href=\"rustc_middle/ty/fold/trait.TypeFoldable.html\" title=\"trait rustc_middle::ty::fold::TypeFoldable\">TypeFoldable</a>&lt;'tcx&gt; for <a class=\"struct\" href=\"rustc_transmute/rustc/struct.Types.html\" title=\"struct rustc_transmute::rustc::Types\">Types</a>&lt;'tcx&gt;"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()