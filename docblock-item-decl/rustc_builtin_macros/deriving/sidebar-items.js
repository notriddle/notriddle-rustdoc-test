window.SIDEBAR_ITEMS = {"fn":[["assert_ty_bounds",""],["call_intrinsic","Constructs an expression that calls an intrinsic"],["call_unreachable","Constructs an expression that calls the `unreachable` intrinsic."],["inject_impl_of_structural_trait",""]],"macro":[["path_local",""],["path_std",""],["pathvec_std",""]],"mod":[["bounds",""],["clone",""],["debug",""],["decodable","The compiler code necessary for `#[derive(RustcDecodable)]`. See encodable.rs for more."],["default",""],["encodable","The compiler code necessary to implement the `#[derive(RustcEncodable)]` (and `RustcDecodable`, in `decodable.rs`) extension. The idea here is that type-defining items may be tagged with `#[derive(RustcEncodable, RustcDecodable)]`."],["eq",""],["generic","Some code that abstracts away much of the boilerplate of writing `derive` instances for traits. Among other things it manages getting access to the fields of the 4 different sorts of structs and enum variants, as well as creating the method and impl ast instances."],["hash",""],["ord",""],["partial_eq",""],["partial_ord",""]],"struct":[["BuiltinDerive",""]]};