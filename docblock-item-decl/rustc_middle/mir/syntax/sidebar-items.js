window.SIDEBAR_ITEMS = {"enum":[["AggregateKind",""],["AnalysisPhase","See [`MirPhase::Analysis`]."],["AssertKind","Information about an assertion failure."],["BinOp",""],["BorrowKind",""],["CastKind",""],["FakeReadCause","The `FakeReadCause` describes the type of pattern why a FakeRead statement exists."],["InlineAsmOperand",""],["MirPhase","Represents the “flavors” of MIR."],["NonDivergingIntrinsic",""],["NullOp",""],["Operand","An operand in MIR represents a “value” in Rust, the definition of which is undecided and part of the memory model. One proposal for a definition of values can be found on UCG."],["ProjectionElem",""],["RetagKind","Describes what kind of retag is to be performed."],["RuntimePhase","See [`MirPhase::Runtime`]."],["Rvalue","The various kinds of rvalues that can appear in MIR."],["StatementKind","The various kinds of statements that can appear in MIR."],["TerminatorKind","The various kinds of terminators, representing ways of exiting from a basic block."],["UnOp",""]],"mod":[["size_asserts",""]],"struct":[["CopyNonOverlapping",""],["Coverage",""],["Place","Places roughly correspond to a “location in memory.” Places in MIR are the same mathematical object as places in Rust. This of course means that what exactly they are is undecided and part of the Rust memory model. However, they will likely contain at least the following pieces of information in some form:"]],"type":[["AssertMessage","Type for MIR `Assert` terminator error messages."],["PlaceElem","Alias for projections as they appear in places, where the base is a place and the index is a local."]]};