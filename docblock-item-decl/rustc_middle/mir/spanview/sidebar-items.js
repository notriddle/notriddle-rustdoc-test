window.SIDEBAR_ITEMS = {"constant":[["ANNOTATION_LEFT_BRACKET",""],["ANNOTATION_RIGHT_BRACKET",""],["CARET",""],["FOOTER",""],["HEADER",""],["NEW_LINE_SPAN",""],["START_BODY",""],["STYLE_SECTION",""],["TOOLTIP_INDENT",""]],"fn":[["block_span_viewable",""],["compute_block_span",""],["escape_attr",""],["escape_html",""],["fn_span",""],["hir_body",""],["make_html_snippet",""],["source_range_no_file","Format a string showing the start line and column, and end line and column within a file."],["statement_kind_name",""],["statement_span_viewable",""],["terminator_kind_name",""],["terminator_span_viewable",""],["tooltip",""],["trim_span",""],["trim_span_hi",""],["trim_span_lo",""],["write_coverage_gap",""],["write_document","Generate a spanview HTML+CSS document for the given local function `def_id`, and a pre-generated list `SpanViewable`s."],["write_mir_fn_spanview","Write a spanview HTML+CSS file to analyze MIR element spans."],["write_next_viewable_with_overlaps","Recursively process each ordered span. Spans that overlap will have progressively varying styles, such as increased padding for each overlap. Non-overlapping adjacent spans will have alternating style choices, to help distinguish between them if, visually adjacent. The `layer` is incremented for each overlap, and the `alt` bool alternates between true and false, for each adjacent non-overlapping span. Source code between the spans (code that is not in any coverage region) has neutral styling."],["write_span",""]],"struct":[["SpanViewable","Metadata to highlight the span of a MIR BasicBlock, Statement, or Terminator."]]};