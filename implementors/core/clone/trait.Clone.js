(function() {var implementors = {};
implementors["alloc"] = [{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"alloc/alloc/struct.Global.html\" title=\"struct alloc::alloc::Global\">Global</a>","synthetic":false,"types":["alloc::alloc::Global"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, A:&nbsp;<a class=\"trait\" href=\"alloc/alloc/trait.Allocator.html\" title=\"trait alloc::alloc::Allocator\">Allocator</a> + <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T, A&gt;","synthetic":false,"types":["alloc::boxed::Box"]},{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"primitive\" href=\"core/primitive.str.html\">str</a>&gt;","synthetic":false,"types":["alloc::boxed::Box"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, A:&nbsp;<a class=\"trait\" href=\"alloc/alloc/trait.Allocator.html\" title=\"trait alloc::alloc::Allocator\">Allocator</a> + <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"primitive\" href=\"core/primitive.slice.html\">[T]</a>, A&gt;","synthetic":false,"types":["alloc::boxed::Box"]},{"text":"impl&lt;B:&nbsp;?<a class=\"trait\" href=\"core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"alloc/borrow/trait.ToOwned.html\" title=\"trait alloc::borrow::ToOwned\">ToOwned</a>&gt; <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'_, B&gt;","synthetic":false,"types":["alloc::borrow::Cow"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"alloc/collections/binary_heap/struct.BinaryHeap.html\" title=\"struct alloc::collections::binary_heap::BinaryHeap\">BinaryHeap</a>&lt;T&gt;","synthetic":false,"types":["alloc::collections::binary_heap::BinaryHeap"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"alloc/collections/binary_heap/struct.Iter.html\" title=\"struct alloc::collections::binary_heap::Iter\">Iter</a>&lt;'_, T&gt;","synthetic":false,"types":["alloc::collections::binary_heap::Iter"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"alloc/collections/binary_heap/struct.IntoIter.html\" title=\"struct alloc::collections::binary_heap::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":false,"types":["alloc::collections::binary_heap::IntoIter"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"alloc/collections/binary_heap/struct.IntoIterSorted.html\" title=\"struct alloc::collections::binary_heap::IntoIterSorted\">IntoIterSorted</a>&lt;T&gt;","synthetic":false,"types":["alloc::collections::binary_heap::IntoIterSorted"]},{"text":"impl&lt;K:&nbsp;<a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, V:&nbsp;<a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, A:&nbsp;<a class=\"trait\" href=\"alloc/alloc/trait.Allocator.html\" title=\"trait alloc::alloc::Allocator\">Allocator</a> + <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"alloc/collections/btree_map/struct.BTreeMap.html\" title=\"struct alloc::collections::btree_map::BTreeMap\">BTreeMap</a>&lt;K, V, A&gt;","synthetic":false,"types":["alloc::collections::btree::map::BTreeMap"]},{"text":"impl&lt;K, V&gt; <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"alloc/collections/btree_map/struct.Iter.html\" title=\"struct alloc::collections::btree_map::Iter\">Iter</a>&lt;'_, K, V&gt;","synthetic":false,"types":["alloc::collections::btree::map::Iter"]},{"text":"impl&lt;K, V&gt; <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"alloc/collections/btree_map/struct.Keys.html\" title=\"struct alloc::collections::btree_map::Keys\">Keys</a>&lt;'_, K, V&gt;","synthetic":false,"types":["alloc::collections::btree::map::Keys"]},{"text":"impl&lt;K, V&gt; <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"alloc/collections/btree_map/struct.Values.html\" title=\"struct alloc::collections::btree_map::Values\">Values</a>&lt;'_, K, V&gt;","synthetic":false,"types":["alloc::collections::btree::map::Values"]},{"text":"impl&lt;K, V&gt; <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"alloc/collections/btree_map/struct.Range.html\" title=\"struct alloc::collections::btree_map::Range\">Range</a>&lt;'_, K, V&gt;","synthetic":false,"types":["alloc::collections::btree::map::Range"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, A:&nbsp;<a class=\"trait\" href=\"alloc/alloc/trait.Allocator.html\" title=\"trait alloc::alloc::Allocator\">Allocator</a> + <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"alloc/collections/btree_set/struct.BTreeSet.html\" title=\"struct alloc::collections::btree_set::BTreeSet\">BTreeSet</a>&lt;T, A&gt;","synthetic":false,"types":["alloc::collections::btree::set::BTreeSet"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"alloc/collections/btree_set/struct.Iter.html\" title=\"struct alloc::collections::btree_set::Iter\">Iter</a>&lt;'_, T&gt;","synthetic":false,"types":["alloc::collections::btree::set::Iter"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"alloc/collections/btree_set/struct.Range.html\" title=\"struct alloc::collections::btree_set::Range\">Range</a>&lt;'_, T&gt;","synthetic":false,"types":["alloc::collections::btree::set::Range"]},{"text":"impl&lt;T, A:&nbsp;<a class=\"trait\" href=\"alloc/alloc/trait.Allocator.html\" title=\"trait alloc::alloc::Allocator\">Allocator</a> + <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"alloc/collections/btree_set/struct.Difference.html\" title=\"struct alloc::collections::btree_set::Difference\">Difference</a>&lt;'_, T, A&gt;","synthetic":false,"types":["alloc::collections::btree::set::Difference"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"alloc/collections/btree_set/struct.SymmetricDifference.html\" title=\"struct alloc::collections::btree_set::SymmetricDifference\">SymmetricDifference</a>&lt;'_, T&gt;","synthetic":false,"types":["alloc::collections::btree::set::SymmetricDifference"]},{"text":"impl&lt;T, A:&nbsp;<a class=\"trait\" href=\"alloc/alloc/trait.Allocator.html\" title=\"trait alloc::alloc::Allocator\">Allocator</a> + <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"alloc/collections/btree_set/struct.Intersection.html\" title=\"struct alloc::collections::btree_set::Intersection\">Intersection</a>&lt;'_, T, A&gt;","synthetic":false,"types":["alloc::collections::btree::set::Intersection"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"alloc/collections/btree_set/struct.Union.html\" title=\"struct alloc::collections::btree_set::Union\">Union</a>&lt;'_, T&gt;","synthetic":false,"types":["alloc::collections::btree::set::Union"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"alloc/collections/linked_list/struct.Iter.html\" title=\"struct alloc::collections::linked_list::Iter\">Iter</a>&lt;'_, T&gt;","synthetic":false,"types":["alloc::collections::linked_list::Iter"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"alloc/collections/linked_list/struct.IntoIter.html\" title=\"struct alloc::collections::linked_list::IntoIter\">IntoIter</a>&lt;T&gt;","synthetic":false,"types":["alloc::collections::linked_list::IntoIter"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"alloc/collections/linked_list/struct.Cursor.html\" title=\"struct alloc::collections::linked_list::Cursor\">Cursor</a>&lt;'_, T&gt;","synthetic":false,"types":["alloc::collections::linked_list::Cursor"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"alloc/collections/linked_list/struct.LinkedList.html\" title=\"struct alloc::collections::linked_list::LinkedList\">LinkedList</a>&lt;T&gt;","synthetic":false,"types":["alloc::collections::linked_list::LinkedList"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, A:&nbsp;<a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"alloc/alloc/trait.Allocator.html\" title=\"trait alloc::alloc::Allocator\">Allocator</a>&gt; <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"alloc/collections/vec_deque/struct.IntoIter.html\" title=\"struct alloc::collections::vec_deque::IntoIter\">IntoIter</a>&lt;T, A&gt;","synthetic":false,"types":["alloc::collections::vec_deque::into_iter::IntoIter"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"alloc/collections/vec_deque/struct.Iter.html\" title=\"struct alloc::collections::vec_deque::Iter\">Iter</a>&lt;'_, T&gt;","synthetic":false,"types":["alloc::collections::vec_deque::iter::Iter"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, A:&nbsp;<a class=\"trait\" href=\"alloc/alloc/trait.Allocator.html\" title=\"trait alloc::alloc::Allocator\">Allocator</a> + <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"alloc/collections/vec_deque/struct.VecDeque.html\" title=\"struct alloc::collections::vec_deque::VecDeque\">VecDeque</a>&lt;T, A&gt;","synthetic":false,"types":["alloc::collections::vec_deque::VecDeque"]},{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"alloc/collections/struct.TryReserveError.html\" title=\"struct alloc::collections::TryReserveError\">TryReserveError</a>","synthetic":false,"types":["alloc::collections::TryReserveError"]},{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"alloc/collections/enum.TryReserveErrorKind.html\" title=\"enum alloc::collections::TryReserveErrorKind\">TryReserveErrorKind</a>","synthetic":false,"types":["alloc::collections::TryReserveErrorKind"]},{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"alloc/ffi/struct.CString.html\" title=\"struct alloc::ffi::CString\">CString</a>","synthetic":false,"types":["alloc::ffi::c_str::CString"]},{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"alloc/ffi/struct.NulError.html\" title=\"struct alloc::ffi::NulError\">NulError</a>","synthetic":false,"types":["alloc::ffi::c_str::NulError"]},{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"alloc/ffi/struct.FromVecWithNulError.html\" title=\"struct alloc::ffi::FromVecWithNulError\">FromVecWithNulError</a>","synthetic":false,"types":["alloc::ffi::c_str::FromVecWithNulError"]},{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"alloc/ffi/struct.IntoStringError.html\" title=\"struct alloc::ffi::IntoStringError\">IntoStringError</a>","synthetic":false,"types":["alloc::ffi::c_str::IntoStringError"]},{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"struct\" href=\"core/ffi/c_str/struct.CStr.html\" title=\"struct core::ffi::c_str::CStr\">CStr</a>&gt;","synthetic":false,"types":["alloc::boxed::Box"]},{"text":"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"alloc/rc/struct.Rc.html\" title=\"struct alloc::rc::Rc\">Rc</a>&lt;T&gt;","synthetic":false,"types":["alloc::rc::Rc"]},{"text":"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"alloc/rc/struct.Weak.html\" title=\"struct alloc::rc::Weak\">Weak</a>&lt;T&gt;","synthetic":false,"types":["alloc::rc::Weak"]},{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"alloc/string/struct.FromUtf8Error.html\" title=\"struct alloc::string::FromUtf8Error\">FromUtf8Error</a>","synthetic":false,"types":["alloc::string::FromUtf8Error"]},{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>","synthetic":false,"types":["alloc::string::String"]},{"text":"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;","synthetic":false,"types":["alloc::sync::Arc"]},{"text":"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"alloc/sync/struct.Weak.html\" title=\"struct alloc::sync::Weak\">Weak</a>&lt;T&gt;","synthetic":false,"types":["alloc::sync::Weak"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, A:&nbsp;<a class=\"trait\" href=\"alloc/alloc/trait.Allocator.html\" title=\"trait alloc::alloc::Allocator\">Allocator</a> + <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"alloc/vec/struct.IntoIter.html\" title=\"struct alloc::vec::IntoIter\">IntoIter</a>&lt;T, A&gt;","synthetic":false,"types":["alloc::vec::into_iter::IntoIter"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, A:&nbsp;<a class=\"trait\" href=\"alloc/alloc/trait.Allocator.html\" title=\"trait alloc::alloc::Allocator\">Allocator</a> + <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T, A&gt;","synthetic":false,"types":["alloc::vec::Vec"]}];
implementors["core"] = [];
implementors["proc_macro"] = [{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"proc_macro/enum.Level.html\" title=\"enum proc_macro::Level\">Level</a>","synthetic":false,"types":["proc_macro::diagnostic::Level"]},{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"proc_macro/struct.Diagnostic.html\" title=\"struct proc_macro::Diagnostic\">Diagnostic</a>","synthetic":false,"types":["proc_macro::diagnostic::Diagnostic"]},{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"proc_macro/struct.TokenStream.html\" title=\"struct proc_macro::TokenStream\">TokenStream</a>","synthetic":false,"types":["proc_macro::TokenStream"]},{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"proc_macro/token_stream/struct.IntoIter.html\" title=\"struct proc_macro::token_stream::IntoIter\">IntoIter</a>","synthetic":false,"types":["proc_macro::token_stream::IntoIter"]},{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"proc_macro/struct.Span.html\" title=\"struct proc_macro::Span\">Span</a>","synthetic":false,"types":["proc_macro::Span"]},{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"proc_macro/struct.LineColumn.html\" title=\"struct proc_macro::LineColumn\">LineColumn</a>","synthetic":false,"types":["proc_macro::LineColumn"]},{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"proc_macro/struct.SourceFile.html\" title=\"struct proc_macro::SourceFile\">SourceFile</a>","synthetic":false,"types":["proc_macro::SourceFile"]},{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"proc_macro/enum.TokenTree.html\" title=\"enum proc_macro::TokenTree\">TokenTree</a>","synthetic":false,"types":["proc_macro::TokenTree"]},{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"proc_macro/struct.Group.html\" title=\"struct proc_macro::Group\">Group</a>","synthetic":false,"types":["proc_macro::Group"]},{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"proc_macro/enum.Delimiter.html\" title=\"enum proc_macro::Delimiter\">Delimiter</a>","synthetic":false,"types":["proc_macro::Delimiter"]},{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"proc_macro/struct.Punct.html\" title=\"struct proc_macro::Punct\">Punct</a>","synthetic":false,"types":["proc_macro::Punct"]},{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"proc_macro/enum.Spacing.html\" title=\"enum proc_macro::Spacing\">Spacing</a>","synthetic":false,"types":["proc_macro::Spacing"]},{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"proc_macro/struct.Ident.html\" title=\"struct proc_macro::Ident\">Ident</a>","synthetic":false,"types":["proc_macro::Ident"]},{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"proc_macro/struct.Literal.html\" title=\"struct proc_macro::Literal\">Literal</a>","synthetic":false,"types":["proc_macro::Literal"]}];
implementors["std"] = [{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/thread/struct.AccessError.html\" title=\"struct std::thread::AccessError\">AccessError</a>","synthetic":false,"types":["std::thread::local::AccessError"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/thread/struct.ThreadId.html\" title=\"struct std::thread::ThreadId\">ThreadId</a>","synthetic":false,"types":["std::thread::ThreadId"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/thread/struct.Thread.html\" title=\"struct std::thread::Thread\">Thread</a>","synthetic":false,"types":["std::thread::Thread"]},{"text":"impl&lt;K, V, S&gt; <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/collections/hash_map/struct.HashMap.html\" title=\"struct std::collections::hash_map::HashMap\">HashMap</a>&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a>,&nbsp;</span>","synthetic":false,"types":["std::collections::hash::map::HashMap"]},{"text":"impl&lt;K, V&gt; <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/collections/hash_map/struct.Iter.html\" title=\"struct std::collections::hash_map::Iter\">Iter</a>&lt;'_, K, V&gt;","synthetic":false,"types":["std::collections::hash::map::Iter"]},{"text":"impl&lt;K, V&gt; <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/collections/hash_map/struct.Keys.html\" title=\"struct std::collections::hash_map::Keys\">Keys</a>&lt;'_, K, V&gt;","synthetic":false,"types":["std::collections::hash::map::Keys"]},{"text":"impl&lt;K, V&gt; <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/collections/hash_map/struct.Values.html\" title=\"struct std::collections::hash_map::Values\">Values</a>&lt;'_, K, V&gt;","synthetic":false,"types":["std::collections::hash::map::Values"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/collections/hash_map/struct.RandomState.html\" title=\"struct std::collections::hash_map::RandomState\">RandomState</a>","synthetic":false,"types":["std::collections::hash::map::RandomState"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/collections/hash_map/struct.DefaultHasher.html\" title=\"struct std::collections::hash_map::DefaultHasher\">DefaultHasher</a>","synthetic":false,"types":["std::collections::hash::map::DefaultHasher"]},{"text":"impl&lt;T, S&gt; <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/collections/hash_set/struct.HashSet.html\" title=\"struct std::collections::hash_set::HashSet\">HashSet</a>&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a>,&nbsp;</span>","synthetic":false,"types":["std::collections::hash::set::HashSet"]},{"text":"impl&lt;K&gt; <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/collections/hash_set/struct.Iter.html\" title=\"struct std::collections::hash_set::Iter\">Iter</a>&lt;'_, K&gt;","synthetic":false,"types":["std::collections::hash::set::Iter"]},{"text":"impl&lt;T, S&gt; <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/collections/hash_set/struct.Intersection.html\" title=\"struct std::collections::hash_set::Intersection\">Intersection</a>&lt;'_, T, S&gt;","synthetic":false,"types":["std::collections::hash::set::Intersection"]},{"text":"impl&lt;T, S&gt; <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/collections/hash_set/struct.Difference.html\" title=\"struct std::collections::hash_set::Difference\">Difference</a>&lt;'_, T, S&gt;","synthetic":false,"types":["std::collections::hash::set::Difference"]},{"text":"impl&lt;T, S&gt; <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/collections/hash_set/struct.SymmetricDifference.html\" title=\"struct std::collections::hash_set::SymmetricDifference\">SymmetricDifference</a>&lt;'_, T, S&gt;","synthetic":false,"types":["std::collections::hash::set::SymmetricDifference"]},{"text":"impl&lt;T, S&gt; <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/collections/hash_set/struct.Union.html\" title=\"struct std::collections::hash_set::Union\">Union</a>&lt;'_, T, S&gt;","synthetic":false,"types":["std::collections::hash::set::Union"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"std/env/enum.VarError.html\" title=\"enum std::env::VarError\">VarError</a>","synthetic":false,"types":["std::env::VarError"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/error/struct.Chain.html\" title=\"struct std::error::Chain\">Chain</a>&lt;'a&gt;","synthetic":false,"types":["std::error::Chain"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/ffi/struct.OsString.html\" title=\"struct std::ffi::OsString\">OsString</a>","synthetic":false,"types":["std::ffi::os_str::OsString"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/boxed/struct.Box.html\" title=\"struct std::boxed::Box\">Box</a>&lt;<a class=\"struct\" href=\"std/ffi/struct.OsStr.html\" title=\"struct std::ffi::OsStr\">OsStr</a>&gt;","synthetic":false,"types":["alloc::boxed::Box"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/fs/struct.Metadata.html\" title=\"struct std::fs::Metadata\">Metadata</a>","synthetic":false,"types":["std::fs::Metadata"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/fs/struct.OpenOptions.html\" title=\"struct std::fs::OpenOptions\">OpenOptions</a>","synthetic":false,"types":["std::fs::OpenOptions"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/fs/struct.Permissions.html\" title=\"struct std::fs::Permissions\">Permissions</a>","synthetic":false,"types":["std::fs::Permissions"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/fs/struct.FileType.html\" title=\"struct std::fs::FileType\">FileType</a>","synthetic":false,"types":["std::fs::FileType"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/io/struct.Cursor.html\" title=\"struct std::io::Cursor\">Cursor</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a>,&nbsp;</span>","synthetic":false,"types":["std::io::cursor::Cursor"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"std/io/enum.ErrorKind.html\" title=\"enum std::io::ErrorKind\">ErrorKind</a>","synthetic":false,"types":["std::io::error::ErrorKind"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/io/struct.Empty.html\" title=\"struct std::io::Empty\">Empty</a>","synthetic":false,"types":["std::io::util::Empty"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/io/struct.Sink.html\" title=\"struct std::io::Sink\">Sink</a>","synthetic":false,"types":["std::io::util::Sink"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/io/struct.IoSlice.html\" title=\"struct std::io::IoSlice\">IoSlice</a>&lt;'a&gt;","synthetic":false,"types":["std::io::IoSlice"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"std/io/enum.SeekFrom.html\" title=\"enum std::io::SeekFrom\">SeekFrom</a>","synthetic":false,"types":["std::io::SeekFrom"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"std/net/enum.SocketAddr.html\" title=\"enum std::net::SocketAddr\">SocketAddr</a>","synthetic":false,"types":["std::net::addr::SocketAddr"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/net/struct.SocketAddrV4.html\" title=\"struct std::net::SocketAddrV4\">SocketAddrV4</a>","synthetic":false,"types":["std::net::addr::SocketAddrV4"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/net/struct.SocketAddrV6.html\" title=\"struct std::net::SocketAddrV6\">SocketAddrV6</a>","synthetic":false,"types":["std::net::addr::SocketAddrV6"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"std/net/enum.IpAddr.html\" title=\"enum std::net::IpAddr\">IpAddr</a>","synthetic":false,"types":["std::net::ip::IpAddr"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"std/net/enum.Ipv6MulticastScope.html\" title=\"enum std::net::Ipv6MulticastScope\">Ipv6MulticastScope</a>","synthetic":false,"types":["std::net::ip::Ipv6MulticastScope"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/net/struct.Ipv4Addr.html\" title=\"struct std::net::Ipv4Addr\">Ipv4Addr</a>","synthetic":false,"types":["std::net::ip::Ipv4Addr"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/net/struct.Ipv6Addr.html\" title=\"struct std::net::Ipv6Addr\">Ipv6Addr</a>","synthetic":false,"types":["std::net::ip::Ipv6Addr"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/net/struct.AddrParseError.html\" title=\"struct std::net::AddrParseError\">AddrParseError</a>","synthetic":false,"types":["std::net::parser::AddrParseError"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"std/net/enum.Shutdown.html\" title=\"enum std::net::Shutdown\">Shutdown</a>","synthetic":false,"types":["std::net::Shutdown"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/os/unix/net/struct.SocketAddr.html\" title=\"struct std::os::unix::net::SocketAddr\">SocketAddr</a>","synthetic":false,"types":["std::os::unix::net::addr::SocketAddr"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/os/unix/net/struct.SocketCred.html\" title=\"struct std::os::unix::net::SocketCred\">SocketCred</a>","synthetic":false,"types":["std::os::unix::net::ancillary::SocketCred"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/os/unix/ucred/struct.UCred.html\" title=\"struct std::os::unix::ucred::UCred\">UCred</a>","synthetic":false,"types":["std::os::unix::ucred::UCred"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/os/linux/raw/struct.stat.html\" title=\"struct std::os::linux::raw::stat\">stat</a>","synthetic":false,"types":["std::os::linux::raw::arch::stat"]},{"text":"impl&lt;'handle&gt; <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/os/windows/io/struct.BorrowedHandle.html\" title=\"struct std::os::windows::io::BorrowedHandle\">BorrowedHandle</a>&lt;'handle&gt;","synthetic":false,"types":["std::os::windows::io::handle::BorrowedHandle"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/os/windows/io/struct.NullHandleError.html\" title=\"struct std::os::windows::io::NullHandleError\">NullHandleError</a>","synthetic":false,"types":["std::os::windows::io::handle::NullHandleError"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/os/windows/io/struct.InvalidHandleError.html\" title=\"struct std::os::windows::io::InvalidHandleError\">InvalidHandleError</a>","synthetic":false,"types":["std::os::windows::io::handle::InvalidHandleError"]},{"text":"impl&lt;'socket&gt; <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/os/windows/io/struct.BorrowedSocket.html\" title=\"struct std::os::windows::io::BorrowedSocket\">BorrowedSocket</a>&lt;'socket&gt;","synthetic":false,"types":["std::os::windows::io::socket::BorrowedSocket"]},{"text":"impl&lt;'fd&gt; <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/os/unix/io/struct.BorrowedFd.html\" title=\"struct std::os::unix::io::BorrowedFd\">BorrowedFd</a>&lt;'fd&gt;","synthetic":false,"types":["std::os::fd::owned::BorrowedFd"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"std/panic/enum.BacktraceStyle.html\" title=\"enum std::panic::BacktraceStyle\">BacktraceStyle</a>","synthetic":false,"types":["std::panic::BacktraceStyle"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"std/path/enum.Prefix.html\" title=\"enum std::path::Prefix\">Prefix</a>&lt;'a&gt;","synthetic":false,"types":["std::path::Prefix"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/path/struct.PrefixComponent.html\" title=\"struct std::path::PrefixComponent\">PrefixComponent</a>&lt;'a&gt;","synthetic":false,"types":["std::path::PrefixComponent"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"std/path/enum.Component.html\" title=\"enum std::path::Component\">Component</a>&lt;'a&gt;","synthetic":false,"types":["std::path::Component"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/path/struct.Components.html\" title=\"struct std::path::Components\">Components</a>&lt;'a&gt;","synthetic":false,"types":["std::path::Components"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/path/struct.Iter.html\" title=\"struct std::path::Iter\">Iter</a>&lt;'a&gt;","synthetic":false,"types":["std::path::Iter"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/path/struct.Ancestors.html\" title=\"struct std::path::Ancestors\">Ancestors</a>&lt;'a&gt;","synthetic":false,"types":["std::path::Ancestors"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/path/struct.PathBuf.html\" title=\"struct std::path::PathBuf\">PathBuf</a>","synthetic":false,"types":["std::path::PathBuf"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/boxed/struct.Box.html\" title=\"struct std::boxed::Box\">Box</a>&lt;<a class=\"struct\" href=\"std/path/struct.Path.html\" title=\"struct std::path::Path\">Path</a>&gt;","synthetic":false,"types":["alloc::boxed::Box"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/path/struct.StripPrefixError.html\" title=\"struct std::path::StripPrefixError\">StripPrefixError</a>","synthetic":false,"types":["std::path::StripPrefixError"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/process/struct.Output.html\" title=\"struct std::process::Output\">Output</a>","synthetic":false,"types":["std::process::Output"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/process/struct.ExitStatus.html\" title=\"struct std::process::ExitStatus\">ExitStatus</a>","synthetic":false,"types":["std::process::ExitStatus"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/process/struct.ExitStatusError.html\" title=\"struct std::process::ExitStatusError\">ExitStatusError</a>","synthetic":false,"types":["std::process::ExitStatusError"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/process/struct.ExitCode.html\" title=\"struct std::process::ExitCode\">ExitCode</a>","synthetic":false,"types":["std::process::ExitCode"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/sync/mpsc/struct.SendError.html\" title=\"struct std::sync::mpsc::SendError\">SendError</a>&lt;T&gt;","synthetic":false,"types":["std::sync::mpsc::SendError"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/sync/mpsc/struct.RecvError.html\" title=\"struct std::sync::mpsc::RecvError\">RecvError</a>","synthetic":false,"types":["std::sync::mpsc::RecvError"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"std/sync/mpsc/enum.TryRecvError.html\" title=\"enum std::sync::mpsc::TryRecvError\">TryRecvError</a>","synthetic":false,"types":["std::sync::mpsc::TryRecvError"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"std/sync/mpsc/enum.RecvTimeoutError.html\" title=\"enum std::sync::mpsc::RecvTimeoutError\">RecvTimeoutError</a>","synthetic":false,"types":["std::sync::mpsc::RecvTimeoutError"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"std/sync/mpsc/enum.TrySendError.html\" title=\"enum std::sync::mpsc::TrySendError\">TrySendError</a>&lt;T&gt;","synthetic":false,"types":["std::sync::mpsc::TrySendError"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/sync/mpsc/struct.Sender.html\" title=\"struct std::sync::mpsc::Sender\">Sender</a>&lt;T&gt;","synthetic":false,"types":["std::sync::mpsc::Sender"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/sync/mpsc/struct.SyncSender.html\" title=\"struct std::sync::mpsc::SyncSender\">SyncSender</a>&lt;T&gt;","synthetic":false,"types":["std::sync::mpsc::SyncSender"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/sync/struct.WaitTimeoutResult.html\" title=\"struct std::sync::WaitTimeoutResult\">WaitTimeoutResult</a>","synthetic":false,"types":["std::sync::condvar::WaitTimeoutResult"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/sync/struct.OnceLock.html\" title=\"struct std::sync::OnceLock\">OnceLock</a>&lt;T&gt;","synthetic":false,"types":["std::sync::once_lock::OnceLock"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/time/struct.Instant.html\" title=\"struct std::time::Instant\">Instant</a>","synthetic":false,"types":["std::time::Instant"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/time/struct.SystemTime.html\" title=\"struct std::time::SystemTime\">SystemTime</a>","synthetic":false,"types":["std::time::SystemTime"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/time/struct.SystemTimeError.html\" title=\"struct std::time::SystemTimeError\">SystemTimeError</a>","synthetic":false,"types":["std::time::SystemTimeError"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/os/windows/ffi/struct.EncodeWide.html\" title=\"struct std::os::windows::ffi::EncodeWide\">EncodeWide</a>&lt;'a&gt;","synthetic":false,"types":["std::sys_common::wtf8::EncodeWide"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"std/alloc/struct.System.html\" title=\"struct std::alloc::System\">System</a>","synthetic":false,"types":["std::alloc::System"]},{"text":"impl <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"primitive\" href=\"primitive.unit.html\">()</a>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"primitive\" href=\"primitive.tuple.html#trait-implementations-1\">(T₁, T₂, …, Tₙ)</a>","synthetic":false,"types":[]},{"text":"impl&lt;Ret, T&gt; <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"primitive\" href=\"primitive.tuple.html#trait-implementations-1\">fn (T₁, T₂, …, Tₙ)</a> -> Ret","synthetic":false,"types":[]}];
implementors["test"] = [{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"test/bench/struct.Bencher.html\" title=\"struct test::bench::Bencher\">Bencher</a>","synthetic":false,"types":["test::bench::Bencher"]},{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"test/bench/struct.BenchSamples.html\" title=\"struct test::bench::BenchSamples\">BenchSamples</a>","synthetic":false,"types":["test::bench::BenchSamples"]},{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"test/test/struct.Metric.html\" title=\"struct test::test::Metric\">Metric</a>","synthetic":false,"types":["test::helpers::metrics::Metric"]},{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"test/test/struct.MetricMap.html\" title=\"struct test::test::MetricMap\">MetricMap</a>","synthetic":false,"types":["test::helpers::metrics::MetricMap"]},{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"test/test/enum.Concurrent.html\" title=\"enum test::test::Concurrent\">Concurrent</a>","synthetic":false,"types":["test::options::Concurrent"]},{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"test/test/enum.ShouldPanic.html\" title=\"enum test::test::ShouldPanic\">ShouldPanic</a>","synthetic":false,"types":["test::options::ShouldPanic"]},{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"test/enum.ColorConfig.html\" title=\"enum test::ColorConfig\">ColorConfig</a>","synthetic":false,"types":["test::options::ColorConfig"]},{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"test/enum.OutputFormat.html\" title=\"enum test::OutputFormat\">OutputFormat</a>","synthetic":false,"types":["test::options::OutputFormat"]},{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"test/test/enum.RunIgnored.html\" title=\"enum test::test::RunIgnored\">RunIgnored</a>","synthetic":false,"types":["test::options::RunIgnored"]},{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"test/test/enum.RunStrategy.html\" title=\"enum test::test::RunStrategy\">RunStrategy</a>","synthetic":false,"types":["test::options::RunStrategy"]},{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"test/test/struct.Options.html\" title=\"struct test::test::Options\">Options</a>","synthetic":false,"types":["test::options::Options"]},{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"test/stats/struct.Summary.html\" title=\"struct test::stats::Summary\">Summary</a>","synthetic":false,"types":["test::stats::Summary"]},{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"test/test/enum.TestResult.html\" title=\"enum test::test::TestResult\">TestResult</a>","synthetic":false,"types":["test::test_result::TestResult"]},{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"test/test/struct.TestExecTime.html\" title=\"struct test::test::TestExecTime\">TestExecTime</a>","synthetic":false,"types":["test::time::TestExecTime"]},{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"test/test/struct.TestTimeOptions.html\" title=\"struct test::test::TestTimeOptions\">TestTimeOptions</a>","synthetic":false,"types":["test::time::TestTimeOptions"]},{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"test/test/enum.TestType.html\" title=\"enum test::test::TestType\">TestType</a>","synthetic":false,"types":["test::types::TestType"]},{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"test/enum.NamePadding.html\" title=\"enum test::NamePadding\">NamePadding</a>","synthetic":false,"types":["test::types::NamePadding"]},{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"test/test/enum.TestName.html\" title=\"enum test::test::TestName\">TestName</a>","synthetic":false,"types":["test::types::TestName"]},{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"test/test/struct.TestId.html\" title=\"struct test::test::TestId\">TestId</a>","synthetic":false,"types":["test::types::TestId"]},{"text":"impl <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"test/test/struct.TestDesc.html\" title=\"struct test::test::TestDesc\">TestDesc</a>","synthetic":false,"types":["test::types::TestDesc"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()