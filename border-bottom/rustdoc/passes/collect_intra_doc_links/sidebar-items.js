window.SIDEBAR_ITEMS = {"constant":[["COLLECT_INTRA_DOC_LINKS",""]],"enum":[["Disambiguator","Disambiguators for a link."],["MalformedGenerics",""],["PreprocessingError",""],["Res",""],["ResolutionFailure",""],["Suggestion","A suggestion to show in a diagnostic."],["UrlFragment",""]],"fn":[["ambiguity_error","Report an ambiguity error, where there were multiple possible resolutions."],["anchor_failure","Report an anchor failure."],["collect_intra_doc_links",""],["disambiguator_error","Report an error in the link disambiguator."],["full_res",""],["is_derive_trait_collision","Check for resolve collisions between a trait and its derive."],["preprocess_link","Returns:"],["preprocessed_markdown_links",""],["privacy_error","Report a link from a public item to a private one."],["range_between_backticks","Get the section of a link between the backticks, or the whole link if there aren’t any backticks."],["report_anchor_conflict",""],["report_diagnostic","Reports a diagnostic for an intra-doc link."],["report_malformed_generics",""],["report_multiple_anchors",""],["resolution_failure","Reports a link that failed to resolve."],["resolve_associated_trait_item","Look to see if a resolved item has an associated item named `item_name`."],["resolve_primitive","Resolve a primitive type or value."],["should_ignore_link","Returns true if we should ignore `path_str` due to it being unlikely that it is an intra-doc link."],["should_ignore_link_with_disambiguators","Returns true if we should ignore `link` due to it being unlikely that it is an intra-doc link. `link` should still have disambiguators if there were any."],["strip_generics_from_path",""],["strip_generics_from_path_segment",""],["suggest_disambiguator","In case of an ambiguity or mismatched disambiguator, suggest the correct disambiguator."],["trait_assoc_to_impl_assoc_item","Find the associated item in the impl `impl_id` that corresponds to the trait associated item `trait_assoc_id`."],["trait_impls_for","Given a type, return all trait impls in scope in `module` for that type. Returns a set of pairs of `(impl_id, trait_id)`."]],"mod":[["early",""]],"struct":[["DiagnosticInfo",""],["LinkCollector",""],["PreprocessedMarkdownLink",""],["PreprocessingInfo",""],["ResolutionInfo",""],["UnresolvedPath","The link failed to resolve. [`resolution_failure`] should look to see if there’s a more helpful error that can be given."]],"type":[["ResolveRes",""]]};