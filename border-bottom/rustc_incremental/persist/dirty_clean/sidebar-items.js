window.SIDEBAR_ITEMS = {"constant":[["BASE_CONST","For typedef, constants, and statics"],["BASE_FN","DepNodes for functions + methods"],["BASE_HIR","DepNodes for Hir, which is pretty much everything"],["BASE_IMPL","`impl` implementation of struct/trait"],["BASE_MIR","DepNodes for mir_built/Optimized, which is relevant in “executable” code, i.e., functions+methods"],["BASE_STRUCT","Struct, Enum and Union DepNodes"],["CFG",""],["EXCEPT",""],["EXTRA_ASSOCIATED","Trait definition `DepNode`s. Extra `DepNode`s for functions and methods."],["EXTRA_TRAIT",""],["LABELS_ADT","Abstract data type (struct, enum, union) `DepNode`s."],["LABELS_CONST",""],["LABELS_CONST_IN_IMPL","Constant/Typedef in an impl"],["LABELS_CONST_IN_TRAIT","Trait-Const/Typedef DepNodes"],["LABELS_FN","Function `DepNode`s."],["LABELS_FN_IN_IMPL","Method `DepNode`s."],["LABELS_FN_IN_TRAIT","Trait method `DepNode`s."],["LABELS_HIR_ONLY","For generic cases like inline-assembly, modules, etc."],["LABELS_IMPL","Impl `DepNode`s."],["LABELS_TRAIT","Impl `DepNode`s."],["LOADED_FROM_DISK",""]],"fn":[["check_config","Given a `#[rustc_clean]` attribute, scan for a `cfg=\"foo\"` attribute and check whether we have a cfg flag called `foo`."],["check_dirty_clean_annotations",""],["expect_associated_value",""]],"struct":[["Assertion","Represents the requested configuration by rustc_clean/dirty"],["DirtyCleanVisitor",""],["FindAllAttrs",""]],"type":[["Labels",""]]};