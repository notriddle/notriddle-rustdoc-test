window.SIDEBAR_ITEMS = {"enum":[["DepKind","This enum serves as an index into arrays built by `make_dep_kind_array`."],["DepNodeColor",""]],"fn":[["hash_result",""]],"mod":[["dep_node","Nodes in the dependency graph."],["label_strs","Contains variant => str representations for constructing DepNode groups for tests."]],"struct":[["DepKindStruct","This struct stores metadata about each DepKind."],["DepNodeFilter","A dep-node filter goes from a user-defined string to a query over nodes. Right now the format is like this:"],["DepNodeIndex",""],["SerializedDepNodeIndex",""],["WorkProduct","A “work product” is an intermediate result that we save into the incremental directory for later re-use. The primary example are the object files that we save for each partition at code generation time."],["WorkProductId","A “work product” corresponds to a `.o` (or other) file that we save in between runs. These IDs do not have a `DefId` but rather some independent path or string that persists between runs without the need to be mapped or unmapped. (This ensures we can serialize them even in the absence of a tcx.)"]],"trait":[["DepContext",""],["DepNodeExt",""]],"type":[["DepGraph",""],["DepGraphQuery",""],["DepNode",""],["EdgeFilter",""],["SerializedDepGraph",""],["TaskDeps",""],["TaskDepsRef",""]]};